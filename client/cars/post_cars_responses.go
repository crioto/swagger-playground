// Code generated by go-swagger; DO NOT EDIT.

package cars

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PostCarsReader is a Reader for the PostCars structure.
type PostCarsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostCarsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostCarsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 405:
		result := NewPostCarsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostCarsOK creates a PostCarsOK with default headers values
func NewPostCarsOK() *PostCarsOK {
	return &PostCarsOK{}
}

/*PostCarsOK handles this case with default header values.

Successful
*/
type PostCarsOK struct {
}

func (o *PostCarsOK) Error() string {
	return fmt.Sprintf("[POST /cars][%d] postCarsOK ", 200)
}

func (o *PostCarsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostCarsMethodNotAllowed creates a PostCarsMethodNotAllowed with default headers values
func NewPostCarsMethodNotAllowed() *PostCarsMethodNotAllowed {
	return &PostCarsMethodNotAllowed{}
}

/*PostCarsMethodNotAllowed handles this case with default header values.

Error in adding car
*/
type PostCarsMethodNotAllowed struct {
}

func (o *PostCarsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /cars][%d] postCarsMethodNotAllowed ", 405)
}

func (o *PostCarsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
