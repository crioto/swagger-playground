// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PutUserUsernameReader is a Reader for the PutUserUsername structure.
type PutUserUsernameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutUserUsernameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutUserUsernameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutUserUsernameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutUserUsernameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutUserUsernameOK creates a PutUserUsernameOK with default headers values
func NewPutUserUsernameOK() *PutUserUsernameOK {
	return &PutUserUsernameOK{}
}

/*PutUserUsernameOK handles this case with default header values.

Successful
*/
type PutUserUsernameOK struct {
}

func (o *PutUserUsernameOK) Error() string {
	return fmt.Sprintf("[PUT /user/{username}][%d] putUserUsernameOK ", 200)
}

func (o *PutUserUsernameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutUserUsernameBadRequest creates a PutUserUsernameBadRequest with default headers values
func NewPutUserUsernameBadRequest() *PutUserUsernameBadRequest {
	return &PutUserUsernameBadRequest{}
}

/*PutUserUsernameBadRequest handles this case with default header values.

Invalid user
*/
type PutUserUsernameBadRequest struct {
}

func (o *PutUserUsernameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /user/{username}][%d] putUserUsernameBadRequest ", 400)
}

func (o *PutUserUsernameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutUserUsernameNotFound creates a PutUserUsernameNotFound with default headers values
func NewPutUserUsernameNotFound() *PutUserUsernameNotFound {
	return &PutUserUsernameNotFound{}
}

/*PutUserUsernameNotFound handles this case with default header values.

User not found
*/
type PutUserUsernameNotFound struct {
}

func (o *PutUserUsernameNotFound) Error() string {
	return fmt.Sprintf("[PUT /user/{username}][%d] putUserUsernameNotFound ", 404)
}

func (o *PutUserUsernameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
