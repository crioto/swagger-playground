// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/crioto/swagger-playground/models"
)

// GetUserUsernameReader is a Reader for the GetUserUsername structure.
type GetUserUsernameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserUsernameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUserUsernameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetUserUsernameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetUserUsernameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUserUsernameOK creates a GetUserUsernameOK with default headers values
func NewGetUserUsernameOK() *GetUserUsernameOK {
	return &GetUserUsernameOK{}
}

/*GetUserUsernameOK handles this case with default header values.

Successful
*/
type GetUserUsernameOK struct {
	Payload *models.User
}

func (o *GetUserUsernameOK) Error() string {
	return fmt.Sprintf("[GET /user/{username}][%d] getUserUsernameOK  %+v", 200, o.Payload)
}

func (o *GetUserUsernameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserUsernameBadRequest creates a GetUserUsernameBadRequest with default headers values
func NewGetUserUsernameBadRequest() *GetUserUsernameBadRequest {
	return &GetUserUsernameBadRequest{}
}

/*GetUserUsernameBadRequest handles this case with default header values.

Invalid username
*/
type GetUserUsernameBadRequest struct {
}

func (o *GetUserUsernameBadRequest) Error() string {
	return fmt.Sprintf("[GET /user/{username}][%d] getUserUsernameBadRequest ", 400)
}

func (o *GetUserUsernameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserUsernameNotFound creates a GetUserUsernameNotFound with default headers values
func NewGetUserUsernameNotFound() *GetUserUsernameNotFound {
	return &GetUserUsernameNotFound{}
}

/*GetUserUsernameNotFound handles this case with default header values.

User not found
*/
type GetUserUsernameNotFound struct {
}

func (o *GetUserUsernameNotFound) Error() string {
	return fmt.Sprintf("[GET /user/{username}][%d] getUserUsernameNotFound ", 404)
}

func (o *GetUserUsernameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
